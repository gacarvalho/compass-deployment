---
x-airflow-common:
  &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.5.1}
  # build: .
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: |
      postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: |
      postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: |
      db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: |
      'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
    AIRFLOW_WEBSERVER_EXPOSE_CONFI: 'true'
    AIRFLOW_SCHEDULE_MIN_FILE_PROCESS_INTERVAL: 5
    AIRFLOW_SCHEDULE_DAG_DIR_LIST_INTERVAL: 20
  volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
    - .env:/opt/airflow/env/.env
    - /var/run/docker.sock:/var/run/docker.sock
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    &airflow-common-depends-on
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    networks:
      hadoop_network:
        aliases:
          - postgres
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  redis:
    image: redis:latest
    expose:
      - 6379
    networks:
      hadoop_network:
        aliases:
          - redis
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  airflow-webserver:
    image: apache/airflow:2.5.1
    user: "0:0"
    environment:
      <<: *airflow-common-env
    command: webserver
    networks:
      hadoop_network:
        aliases:
          - airflow-webserver
    ports:
      - "8080:8080"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  airflow-scheduler:
    image: apache/airflow:2.5.1
    user: "0:0"
    environment:
      <<: *airflow-common-env
    command: scheduler
    networks:
      hadoop_network:
        aliases:
          - airflow-scheduler
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  airflow-worker:
    image: apache/airflow:2.5.1
    user: "0:0"
    environment:
      <<: *airflow-common-env
    command: celery worker
    networks:
      hadoop_network:
        aliases:
          - airflow-worker
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  airflow-triggerer:
    image: apache/airflow:2.5.1
    environment:
      <<: *airflow-common-env
    command: triggerer
    networks:
      hadoop_network:
        aliases:
          - aiflow-triggerer
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  airflow-init:
    image: apache/airflow:2.5.1
    entrypoint: /bin/bash
    networks:
      hadoop_network:
        aliases:
          - airflow-init
    command:
      - -c
      - |
        exec /entrypoint airflow version && tail -f /dev/null
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  postgres-db-volume:


networks:
  hadoop_network:
    external: true
    driver: overlay